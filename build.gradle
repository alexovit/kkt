buildscript {
	ext {
		kotlinVersion = '1.2.60'
		serialization_version = '0.6.1'
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven { url "https://kotlin.bintray.com/kotlinx" }
		maven { url 'https://dl.bintray.com/palantir/releases' }
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath("org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$serialization_version")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

group = 'it.alexov'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
	maven { url "https://kotlin.bintray.com/kotlinx" }
	maven { url 'https://dl.bintray.com/palantir/releases' }
}

archivesBaseName = 'kkt'
bootJar {
	baseName = 'kkt'
}

docker {
	dependsOn build
	name "${project.group}/${bootJar.baseName}"
	files bootJar.archivePath
	buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.apache.kafka:kafka-streams')
	compile('org.springframework.kafka:spring-kafka')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	compile('com.github.xabgesagtx:telegram-spring-boot-starter:0.18')
	compile("org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.palantir.docker.compose:docker-compose-rule-junit4:0.31.1')
}

